services:
  app:
    build:
      context: .
      args:
        APP_ENV: ${NODE_ENV}
        NODE_ENV: ${NODE_ENV}
        PORT: ${PORT}
    command: ['pnpm', 'start:dev']
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      POSTGRES_URI: postgres://postgres:yourpassword@postgres:5432/nestjs_db
      REDIS_URI: redis://redis:6379
      BACKEND_DOMAIN: http://app:${PORT}
    volumes:
      - .:/home/node/app
      # ** Descomente se precisar persistir o node_modules:
      # - ./node_modules:/home/node/app/node_modules
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - postgres
      - redis
    networks:
      - nestjs_network

  postgres:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_DB: nestjs_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d/
    networks:
      - nestjs_network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - nestjs_network

volumes:
  redis-data:
  postgres-data:

networks:
  nestjs_network:
    driver: bridge
